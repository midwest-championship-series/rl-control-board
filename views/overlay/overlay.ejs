<html>
    <head>
        <title>MNCS Overlay</title>
        <link rel="stylesheet" href="./bootstrap.min.css">
        <style>
            .overlay {
                width: 100%;
                height: 100%;
                border: none;
                position: absolute;
                top: 0px;
                left: 0px;
                background-color: rgba(0, 0, 0, 0);
                margin: 0px auto;
                overflow: hidden;
            }
            .popup {
                width: 350px;
                height: 75px;
                margin: 20px;
                border-radius: 10px;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                box-shadow: 5px 5px 5px #222;
                -webkit-transition: background-color 0.5s ease-in-out;
                -moz-transition: background-color 0.5s ease-in-out;
                -o-transition: background-color 0.5s ease-in-out;
                -khtml-transition: background-color 0.5s ease-in-out;
                transition: background-color 0.5s ease-in-out;
            }
            .popup p {
                margin: 0;
            }
            #transition {
                z-index:10;
            }

            #pre-game-screen, #post-game-screen, #technical-pause-screen {
                z-index: 8;
                background-color: black;
                color: white;
            }
            .montserrat-bold {
                font-family: 'Montserrat', sans-serif;
                font-weight: 900;
                color: white;
            }
        </style>
        <script src="./jquery.min.js"></script>
        <script src="./animate.js"></script>
        <script>
            <%- include('../../node_modules/socket.io-client/dist/socket.io.min.js'); %>
        </script>
        <script>
            let scenes = <%- JSON.stringify(scenes.events); %>;
        </script>
        <script>
            <%- include('overlay.js'); %>
        </script>
    </head>
    <body>

        <video class="overlay" id="transition" muted="muted">
            <source src="./transition.webm" type="video/webm">
        </video>

        <% scenes.names.forEach((entry) => { %>
            <%- include('../../overlays/' + entry + '/overlay.html'); %>
        <% }); %>
        
        <script>
/*
            $(() => {

                ControlBoard.subscribe("ws", "open", (d) => {
                    document.getElementById('controlboard-connecting').style.display = "none";
                    document.getElementById('controlboard-status').innerText = "Control Board Connected!";
                    document.getElementById('controlboard-div').style.backgroundColor = "#4CDB81";
                });
                ControlBoard.subscribe("ws", "close", (d) => {
                    document.getElementById('controlboard-connecting').style.display = "block";
                    document.getElementById('controlboard-status').innerText = "Control Board disconnected.";
                    document.getElementById('controlboard-div').style.backgroundColor = "#BC3232";
                });
                WsSubscribers.subscribe("ws", "open", (d) => {
                    document.getElementById('plugin-connecting').style.display = "none";
                    document.getElementById('plugin-status').innerText = "Relay Connected!";
                    document.getElementById('plugin-div').style.backgroundColor = "#4CDB81";
                });
                WsSubscribers.subscribe("ws", "close", (d) => {
                    document.getElementById('plugin-connecting').style.display = "block";
                    document.getElementById('plugin-status').innerText = "Relay disconnected.";
                    document.getElementById('plugin-div').style.backgroundColor = "#BC3232";
                });
                WsSubscribers.subscribe("game", "goal_scored", (d) => {
                    // transition into replay
                    setTimeout(function() {
                        transition(1.4);
                    }, 2000);
                });
                WsSubscribers.subscribe("game", "player_join", (d) => {
                    if(d['players'] && Object.keys(d['players']) && Object.keys(d['players']).length === teamSize * 2 && (document.querySelector("#pre-game-screen").style.opacity === "1" || document.querySelector("#post-game-screen").style.opacity === "1" || document.querySelector("#technical-pause-screen").style.opacity === "1")){
                        switchScene('MATCH', true);
                    }
                });
                WsSubscribers.subscribe("mncs", "match_prepare", (d) => {
                    if(autoTransition === true){
                        switchScene('PRE_GAME', true);
                    }
                })
                WsSubscribers.subscribe("mncs", "game_ended", (d) => {
                    console.log(d);
                })
                WsSubscribers.subscribe("mncs", "match_complete", (d) => {
                    // no args, mncs:update_state gets sent right before this
                    console.log('MNCS Match Ended!');

                    // Check for the next leave match event and transition to the pregame screen then.
                    matchEnd = true;
                });
                WsSubscribers.subscribe("mncs", "technical_pause", (d) => {
                    if(!(document.querySelector('#post-game-screen').style.opacity === "1" && !matchEnd)) {
                        // do NOT transition to a technical pause if the post game screen is showing and the match hasn't ended. leave the post-game screen up.
                        if(matchEnd){
                            // RESET TIME!!!!!!!!!
                            document.getElementById('match-details-screen').src += "";
                            document.getElementById('replay-screen').src += "";
                            if(autoTransition === true){
                                document.getElementById('pre-game-screen').style.opacity = "0";
                                document.getElementById('post-game-screen').style.opacity = "0";
                                document.getElementById('technical-pause-screen').style.opacity = "0";
                                switchScene('WAITING', false);
                            }
                            matchEnd = false;
                        } else {
                            if(document.getElementById('pre-game-screen').style.opacity !== "1"){
                                // Don't display technical pause if the pre-game screen is up
                                console.log("Technical Pause!");
                                if(document.querySelector('#technical-pause-screen').style.opacity !== "1"){
                                    // there's no point in transitioning from the technical pause to the technical pause. like wtf. wtF CHEYYZ
                                    if(autoTransition === true){
                                        switchScene('TECHNICAL_PAUSE', true);
                                    }
                                }
                            }
                        }
                    }
                })
            });*/
        </script>
    </body>
</html>